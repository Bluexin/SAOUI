buildscript {
    ext.kotlin_version = '1.0.5'
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: "maven"
apply plugin: 'kotlin'
apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.10.2-1.6.1-SNAPSHOT"
group = "com.saomc" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "saoui"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.10.2-12.18.3.2185"
    runDir = "run"
    mappings = "stable_29"
}

reobf{
    jar{
        extraLines "PK: gnu/jel saoui/shade/gnu/jel"
    }
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    shade files('lib/jel-2_1_1/lib/jel.jar')
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }

idea { module { inheritOutputDirs = true } }

uploadArchives {
//    if (System.hasProperty('REPO_PWD')) {
        repositories.mavenDeployer {
            repository(url: "http://maven.bluexin.be/repository/snapshots/") {
                authentication(userName: "CI", password: System.getenv('REPO_PWD'))
            }
//            repository(url: 'file://G:\\saoui\\build\\mvn')
        }
//    } else println("No password set up!")
    
}

task sourceJar(type: Jar, dependsOn: "sourceMainJava", overwrite: true) {
    from "build/sources/main/java"
    from "build/resources/main"
    classifier = 'sources'
}

artifacts {
    archives sourceJar
}
repositories {
    mavenCentral()
}

jar {
    for (dep in configurations.shade) {
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

